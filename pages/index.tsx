import type { GetStaticProps, NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { Character, GetCharactersResults, Info } from '../components/types';
import { useRouter } from 'next/router';
import React from 'react';
import { AppCtx } from '../components/store/myContext';
const Home: NextPage<{ characters: Character[] }> = ({ characters }) => {
    const router = useRouter();
    const ctx = React.useContext(AppCtx);

    const nameSetter = (e: any) => {
        const name = e.target.innerHTML.split(' ')[0];
        ctx?.setChar(name);
        router.push({
            pathname: '/pagination/1',
            query: { page: '1', char: name },
        });
    };

    return (
        <div className={styles.principal}>
            {/* <h1>DATABASE: {process.env.NEXT_PUBLIC_DB_CONNECT}</h1> */}
            <Head>
                <title>Home</title>
                <meta
                    name='description'
                    content='Generated by create next app'
                />
                <link rel='icon' href='/rick.ico' />
            </Head>
            <h1 className={styles.centered}>
                On wich character you want to dive into?
            </h1>
            <div>
                {characters.map((e) => {
                    return (
                        <a>
                            <h3
                                defaultValue={e.name}
                                key={e.id}
                                onClick={nameSetter}
                            >
                                {e.name}
                            </h3>
                        </a>
                    );
                })}
            </div>
        </div>
    );
};

export const getStaticProps: GetStaticProps = async (context) => {
    // context : { locales: undefined, locale: undefined, defaultLocale: undefined }
    const res = await fetch('https://rickandmortyapi.com/api/character');

    const { results }: GetCharactersResults = await res.json();

    return {
        props: {
            characters: results,
        },
    };
};

export default Home;
