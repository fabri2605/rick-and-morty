import type { GetStaticProps, NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { Character, GetCharactersResults, Info } from '../components/types';
import { useRouter } from 'next/router';
import React, { useContext, useEffect } from 'react';
import { AppCtx } from '../components/store/myContext';
import LoadingRick from '../components/svgs/LoadingRick';
const Home: NextPage<{ characters: Character[] }> = ({ characters }) => {
    const router = useRouter();
    const ctx = useContext(AppCtx);

    const nameSetter = (e: any) => {
        ctx?.setLoad(true);
        const name = e.target.innerHTML.split(' ')[0];
        router.push({
            pathname: '/pagination/1',
            query: { page: '1', char: name },
        });
    };

    useEffect(() => {
        ctx?.setLoad(false);
    }, []);

    return (
        <div className={styles.principal}>
            {/* <h1>DATABASE: {process.env.NEXT_PUBLIC_DB_CONNECT}</h1> */}
            <Head>
                <title>Home</title>
                <meta
                    name='description'
                    content='Generated by create next app'
                />
                <link rel='icon' href='/rick.ico' />
            </Head>
            {ctx?.load ? (
                <div className={styles.main}>
                    <div className={styles.loader}>
                        <LoadingRick />
                    </div>
                </div>
            ) : (
                <>
                    <h1 className={styles.centered}>
                        On wich character you want to dive into?
                    </h1>
                    <div>
                        {characters.map((e) => {
                            return (
                                <a key={e.id}>
                                    <h3
                                        key={e.id}
                                        onClick={nameSetter}
                                        className={styles.indexNames}
                                    >
                                        {e.name}
                                    </h3>
                                </a>
                            );
                        })}
                        <a key={'all'}>
                            <h3
                                key={'all'}
                                onClick={nameSetter}
                                className={styles.indexNames}
                            >
                                All Characters
                            </h3>
                        </a>
                        
                    </div>
                </>
            )}
        </div>
    );
};

export const getStaticProps: GetStaticProps = async (context) => {
    // context : { locales: undefined, locale: undefined, defaultLocale: undefined }
    const res = await fetch('https://rickandmortyapi.com/api/character');

    const { results }: GetCharactersResults = await res.json();

    return {
        props: {
            characters: results,
        },
    };
};

export default Home;
